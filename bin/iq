#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2022 Sebastian Gniazdowski

# Bootstrap complete exec environment.
builtin emulate -L zsh
0=${${0:#$ZSH_ARGZERO}:-${(%):-%N}}
0=${${(M)0##/*}:-$PWD/${0#./}}

#
# source a base script
#

[[ -f $0:h:h/Makefile ]] && \
    source $0:h:h/functions/common-script "${opt_e:+edit}${opt_c:+cat}" $0:h:h
[[ -f $0:h:h/libexec/iq/common-script ]] && \
    source $0:h:h/libexec/iq/common-script "${opt_e:+edit}${opt_c:+cat}" $0:h:h

#
# Process options
#

local -A Options
iniq-parse-opts() {
    reply=()
    builtin zparseopts -D -E -A Options -- \
            -get g \
            -edit e \
            -cat c \
            -set s \
            -bottom b \
            -quiet q \
            -verbose v \
            -help h || return 7
    reply=("$@")
}
iniq-usage() {
    iqmsg {41}iq {39}-\[ecbvh\] {208}\<INI-file-path\> …
}
# Init code, options and usage.
{iniq-parse-opts "$@"||[[ -z $Options ]]}&&{iniq-usage; return 7;}
(($#opt_help)) && {iniq-usage; return 0;}
args=( "$reply[@]" )
# Reduce some options to one flag field.
(($+Options[--get]))&&Options[-g]=
(($+Options[--edit]))&&Options[-e]=
(($+Options[--cat]))&&Options[-c]=
(($+Options[--set]))&&Options[-s]=
(($+Options[--quiet]))&&Options[-q]=
(($+Options[--verbose]))&&Options[-v]=

#
# execute requested operation
#

# Set
if (( $+Options[-s] )); then
    for q in "${(@)args[2,-1]}"; do
        # Convert key and value
        set -- $args[1] ${q%%=*} ${q##*=}
        repeat 1 {iniq-set Options $@; exit_code+=$?;}
    done
fi

# Edit
if (( $+Options[-e] )); then
    for q in "${(@)args[2,-1]}"; do
        # Convert key and value
        set -- $args[1] ${q%%=*} ${q##*=}
        repeat 1 {iniq-edit Options $@; exit_code+=$?;}
    done
fi

# Edit
if (( $+Options[-g] )); then
    for q in "${(@)args[2,-1]}"; do
        # Convert key and value
        set -- $args[1] ${q%%=*} ${q##*=}
        repeat 1 {iniq-get Options $@; exit_code+=$?;}
    done
fi

# Cat
if (( $+Options[-c] )); then
    repeat 1 {iniq-cat Options $1; exit_code+=$?;}
fi

# Warning message
((exit_code))&&iqmsg {208}Warning: %fnon-zero exit code %B{41}$exit_code


# Between 1…9 means that index has been updated, despite problems.
return exit_code

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
