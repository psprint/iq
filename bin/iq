#!/usr/bin/env zsh
# -*- mode: sh; sh-indentation: 4; indent-tabs-mode: nil; sh-basic-offset: 4; -*-

# Copyright (c) 2022 Sebastian Gniazdowski

# Bootstrap complete exec environment.
builtin emulate -L zsh
0=${${0:#$ZSH_ARGZERO}:-${(%):-%N}}
0=${${(M)0##/*}:-$PWD/${0#./}}

#
# source a base script
#

[[ -f $0:h:h/Makefile ]] && \
    source $0:h:h/functions/common-script "${opt_e:+edit}${opt_c:+cat}" $0:h:h
[[ -f $0:h:h/libexec/iq/common-script ]] && \
    source $0:h:h/libexec/iq/common-script "${opt_e:+edit}${opt_c:+cat}" $0:h:h

#
# Process options
#

integer cnt
local -A Options
iniq-parse-opts() {
    reply=()
    builtin zparseopts -D -E -A Options -- \
            -get G \
            -edit E \
            -cat C \
            -insert I \
            -bottom b \
            -quiet q \
            -verbose v \
            -help h || return 7
    reply=("$@")
}
iniq-usage() {
    iqmsg Usage: {41}iq {39}-\[ecbvh\] {208}\<INI-file-path\> …
}
# Init code, options and usage.
iniq-parse-opts "$@"||{iniq-usage; return 7;}
args=("$reply[@]")
# Reduce some options to one flag field.
(($+Options[--get]))&&Options[-G]=
(($+Options[--edit]))&&Options[-E]=
(($+Options[--cat]))&&Options[-C]=
(($+Options[--help]))&&Options[-h]=
(($+Options[--insert]))&&Options[-i]=
(($+Options[--quiet]))&&Options[-q]=
(($+Options[--verbose]))&&Options[-v]=
(($+Options[--bottom]))&&Options[-b]=
# Print usage if requested.
(($+Opions[-h]))&&{iniq-usage; return 0;}

#
# execute requested operation
#
# Edit
if (($+Options[-E]||$+Options[-I])); then
    for q in "${(@)args[2,-1]}"; do
        ((k))&&{k=0;continue}
        if [[ $q != *=* ]]; then
            k=i+1
            set -- "$args[1]" "$q" "$args[k]"
        else
            set -- "$args[1]" "${q%%=*}" "${q##*=}"
        fi
        set -- "$args[1]" "${q%%=*}" "${q##*=}"
        (($+Options[-E]))&&repeat 1 {iniq-edit Options $@; exit_code+=$?;}
        (($+Options[-I]))&&repeat 1 {iniq-insert Options $@; exit_code+=$?;}
    done
fi

# Get
if (( $+Options[-G] )); then
    cnt+=1
    if (($#args>1)); then
        for q in "${(@)args[2,-1]}"; do
            # Convert key and value
            set -- "$args[1]" "$q"
            repeat 1 {iniq-get Options $@; exit_code+=$?;}
        done
    else
        iqmsg -ep {203}Error: {208}Missing \
            %B{41}section%b{208}/%B{39}key{208} %bspec, exiting…
    fi
fi
# Cat
if (($+Options[-C])); then
    cnt+=1
    for q in "$args[@]"; do
        repeat 1 {iniq-cat Options "$q"; exit_code+=$?;}
    done
fi

# Warning message
((exit_code))&&iqmsg {208}Warning: %fnon-zero exit code %B{41}$exit_code
((cnt))||iqmsg {208}Error: %fno main option specified, use one of: \
            {39}%B-C%f%b/{39}%B-I%f%b/{39}%B-E%f%b/{39}%B-G%b%f for \
            cat/insert/edit/get operation.

# Between 1…9 means that index has been updated, despite problems.
return exit_code

# vim:ft=zsh:tw=80:sw=4:sts=4:et:foldmarker=[[[,]]]
